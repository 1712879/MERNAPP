{"version":3,"sources":["serviceWorker.js","Components/Header.js","Components/Footer.js","Home/Category.js","Home/Card.js","Home/Content.js","Home/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","Component","Footer","Category","props","onChoose","maloaihang","category","this","map","e","TEN_LOAI","substring","length","key","_id","onClick","MA_LOAI_HANG","React","Card","src","product","LINK_ANH","TEN_SAN_PHAM","MO_TA","GIA_HIEN_TAI","Content","state","productslist","chooseID","axios","get","then","res","setState","data","catch","error","console","log","nextprops","cards","Home","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9061ce6c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light w-100\">\r\n                <a className=\"navbar-brand\" >Navbar</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" >Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" >Features</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" >Pricing</a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\"  id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Dropdown link\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                <a className=\"dropdown-item\" >Action</a>\r\n                                <a className=\"dropdown-item\" >Another action</a>\r\n                                <a className=\"dropdown-item\" >Something else here</a>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card footer w-100\">\r\n                \r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title\">Sản Phẩm Sample Project MERN</div>\r\n                    <div className=\"card-text\">\r\n                        Phan Văn Tuấn - 1712879 - HCMUS-EC-20A10\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nclass Category extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    onChoose = (maloaihang) => {\r\n        this.props.onChoose(maloaihang);\r\n    }\r\n\r\n    render(){\r\n        let category = this.props.category.map(e => {\r\n\r\n            if(e.TEN_LOAI[0] === '\\\"'){\r\n                e.TEN_LOAI = e.TEN_LOAI.substring(1, e.TEN_LOAI.length - 1);\r\n            }\r\n\r\n            return(\r\n                <li key = {e._id} onClick={() => this.onChoose(e.MA_LOAI_HANG)}>\r\n                    {e.TEN_LOAI}\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div className=\"col-3 category\">\r\n                <div className=\"card border-secondary mb-3 card-category\">\r\n                    {category}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\n\r\nclass Card extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card border-primary mb-3 product\">\r\n                <div className=\"card-header\">\r\n                    <img src={this.props.product.LINK_ANH}></img>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.props.product.TEN_SAN_PHAM}</h5>\r\n                    <p className=\"card-text\">{this.props.product.MO_TA}</p>\r\n                    <a className=\"btn btn-outline-success\">{this.props.product.GIA_HIEN_TAI}</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\nclass Content extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productslist : []\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        let {chooseID} = this.props;\r\n        axios.get('/api/producttype/' + chooseID)\r\n            .then(res => {\r\n                this.setState({\r\n                    productslist : res.data\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    componentWillReceiveProps(nextprops){\r\n        let {chooseID} = nextprops;\r\n        axios.get('/api/producttype/' + chooseID)\r\n            .then(res => {\r\n                this.setState({\r\n                    productslist : res.data\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n\r\n        let cards = this.state.productslist.map(e => {\r\n            return(\r\n                <Card key={e._id} product={e}/>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"col-9 content\">\r\n                {cards}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../Components/Header';\r\nimport Footer from '../Components/Footer';\r\nimport Category from './Category';\r\nimport Content from './Content';\r\n\r\nimport './Home.css';\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: [],\r\n            chooseID: 'LH001'\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        axios.get('/api/category')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({\r\n                    \r\n                    category: res.data\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    onChoose = (maloaihang) => {\r\n        this.setState({\r\n            chooseID: maloaihang\r\n        })\r\n\r\n        console.log(this.state)\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"wrapper\">\r\n                <div className=\"row header\">\r\n                    <Header />\r\n                </div>\r\n                <div className=\"row body\">\r\n                    <Category category={this.state.category} onChoose={this.onChoose}/>\r\n                    <Content chooseID={this.state.chooseID}/>\r\n                </div>\r\n                <div className=\"row footer\">\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Home from './Home/Home';\r\nReactDOM.render(<Home />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}