{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkPlace-React\\\\MERNAPP\\\\client\\\\src\\\\Home\\\\Content.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport Pagination from '../Components/Pagination';\nimport Spinner from 'react-spinner-material';\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeCurrentPage = numPage => {\n      let {\n        chooseID\n      } = this.state;\n      axios.get(`/api/producttype/${chooseID}/${numPage}`).then(res => {\n        this.setState({\n          productslist: res.data,\n          currentPage: numPage\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      productslist: [],\n      totalproduct: 0,\n      chooseID: '',\n      currentPage: 1,\n      loading: true\n    };\n  }\n\n  componentWillMount() {\n    console.log('content rendering');\n    let {\n      chooseID\n    } = this.props;\n    axios.get(`/api/producttype/${chooseID}/1`).then(res => {\n      axios.get(`/api/totalproduct/${chooseID}`).then(res1 => {\n        this.setState({\n          totalproduct: res1.data.total_product,\n          productslist: res.data,\n          chooseID: chooseID,\n          loading: false\n        });\n      }).catch(error => console.log(error));\n    }).catch(error => console.log(error));\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.chooseID != nextState.chooseID) {\n      console.log('will update');\n      let {\n        chooseID\n      } = nextProps;\n      axios.get(`/api/producttype/${chooseID}/1`).then(res => {\n        axios.get(`/api/totalproduct/${chooseID}`).then(res1 => {\n          this.setState({\n            totalproduct: res1.data.total_product,\n            productslist: res.data,\n            chooseID: chooseID,\n            currentPage: 1\n          });\n        }).catch(error => console.log(error));\n      }).catch(error => console.log(error));\n    }\n  }\n\n  componentDidUpdate() {\n    let {\n      productslist\n    } = this.state;\n\n    if (productslist != null && productslist.length > 0) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  render() {\n    let cards = this.state.productslist.map(e => {\n      if (e.TEN_SAN_PHAM[0] === '\\\"') {\n        e.TEN_SAN_PHAM = e.TEN_SAN_PHAM.substring(1, e.TEN_SAN_PHAM.length - 1);\n        e.THOI_DIEM_DANG = e.THOI_DIEM_DANG.substring(1, e.THOI_DIEM_DANG.length - 1);\n      }\n\n      return React.createElement(Card, {\n        key: e._id,\n        product: e,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    });\n    let {\n      totalproduct\n    } = this.state;\n    let temp = Math.floor(totalproduct / 6);\n    let pageCount = totalproduct % 6 !== 0 ? temp + 1 : temp;\n    return this.state.loading ? React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      size: 120,\n      spinnerColor: \"#333\",\n      spinnerWidth: 2,\n      visible: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, cards), React.createElement(\"div\", {\n      id: \"pagination-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      totalpage: pageCount,\n      changeCurrentPage: this.changeCurrentPage,\n      currentPage: this.state.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["E:/WorkPlace-React/MERNAPP/client/src/Home/Content.js"],"names":["React","axios","Card","Pagination","Spinner","Content","Component","constructor","props","changeCurrentPage","numPage","chooseID","state","get","then","res","setState","productslist","data","currentPage","catch","error","console","log","totalproduct","loading","componentWillMount","res1","total_product","componentWillUpdate","nextProps","nextState","componentDidUpdate","length","window","scrollTo","top","behavior","render","cards","map","e","TEN_SAN_PHAM","substring","THOI_DIEM_DANG","_id","temp","Math","floor","pageCount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\nimport Pagination from '../Components/Pagination';\r\nimport Spinner from 'react-spinner-material';\r\nclass Content extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productslist : [],\r\n            totalproduct: 0,\r\n            chooseID: '',\r\n            currentPage: 1,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log('content rendering')\r\n        let {chooseID} = this.props;\r\n        axios.get(`/api/producttype/${chooseID}/1`)\r\n            .then(res => {\r\n                axios.get(`/api/totalproduct/${chooseID}`)\r\n                    .then(res1 => {\r\n                        this.setState({\r\n                            totalproduct: res1.data.total_product,\r\n                            productslist : res.data,\r\n                            chooseID: chooseID,\r\n                            loading: false\r\n                        })\r\n                    })\r\n                    .catch(error => console.log(error));\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n    \r\n    componentWillUpdate(nextProps, nextState){\r\n        if(nextProps.chooseID != nextState.chooseID){\r\n            console.log('will update')\r\n            let {chooseID} = nextProps;\r\n            axios.get(`/api/producttype/${chooseID}/1`)\r\n            .then(res => {\r\n                axios.get(`/api/totalproduct/${chooseID}`)\r\n                    .then(res1 => {\r\n                        this.setState({\r\n                            totalproduct: res1.data.total_product,\r\n                            productslist : res.data,\r\n                            chooseID: chooseID,\r\n                            currentPage: 1\r\n                        })\r\n                    })\r\n                    .catch(error => console.log(error));\r\n            })\r\n            .catch(error => console.log(error));\r\n        }\r\n    }\r\n\r\n    changeCurrentPage = numPage => {\r\n        let {chooseID} = this.state;\r\n        axios.get(`/api/producttype/${chooseID}/${numPage}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    productslist : res.data,\r\n                    currentPage: numPage\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        let {productslist} = this.state;\r\n        if(productslist != null && productslist.length > 0){\r\n            \r\n            window.scrollTo({\r\n                top: 0,\r\n                behavior:'smooth'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let cards = this.state.productslist.map(e => {\r\n            if(e.TEN_SAN_PHAM[0] === '\\\"'){\r\n                e.TEN_SAN_PHAM = e.TEN_SAN_PHAM.substring(1,e.TEN_SAN_PHAM.length - 1);\r\n                e.THOI_DIEM_DANG = e.THOI_DIEM_DANG.substring(1,e.THOI_DIEM_DANG.length - 1);\r\n            }\r\n\r\n            return(\r\n                <Card key={e._id} product={e}/>\r\n            )\r\n        })\r\n\r\n        let {totalproduct} = this.state;\r\n        let temp = Math.floor(totalproduct / 6);\r\n        let pageCount = totalproduct % 6 !== 0 ? (temp + 1) : temp;\r\n\r\n        return (\r\n            \r\n                this.state.loading ? \r\n                <div className=\"loading\"> \r\n                    <Spinner size={120} spinnerColor={\"#333\"} spinnerWidth={2} visible={this.state.loading} />\r\n                </div> \r\n                : \r\n                <div>\r\n                    <div className={\"content-wrapper\" }>\r\n                        {cards}\r\n                    </div>\r\n\r\n                    <div id=\"pagination-wrapper\">\r\n                        <Pagination\r\n                            totalpage={pageCount}\r\n                            changeCurrentPage={this.changeCurrentPage}\r\n                            currentPage={this.state.currentPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}