{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkPlace-React\\\\MERNAPP\\\\client\\\\src\\\\Home\\\\Content.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport Pagination from '../Components/Pagination';\nimport Spinner from 'react-spinner-material';\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeCurrentPage = numPage => {\n      let {\n        chooseID\n      } = this.state; // this.setState({loading: true})\n\n      axios.get(`/api/producttype/${chooseID}/${numPage}`).then(res => {\n        this.setState({\n          productslist: res.data,\n          currentPage: numPage\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      productslist: [],\n      totalproduct: 0,\n      currentPage: 1,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    console.log('content did mount');\n    let {\n      chooseID\n    } = this.props;\n    axios.get(`/api/producttype/${chooseID}/1`).then(res => {\n      axios.get(`/api/totalproduct/${chooseID}`).then(res1 => {\n        this.setState({\n          totalproduct: res1.data.total_product,\n          productslist: res.data,\n          chooseID: chooseID\n        });\n      }).catch(error => console.log(error));\n    }).catch(error => console.log(error));\n  } // shouldComponentUpdate(nextProps, nextState){\n  //     console.log(nextProps)\n  //     console.log(nextState)\n  //     console.log(this.state)\n  //     if(nextProps.chooseID != nextState.chooseID ){\n  //         return true;\n  //     }\n  //     return false;   \n  // }\n  // componentWillUpdate(nextProps, nextState){\n  //     console.log('content will update')\n  //     if(nextProps.chooseID != nextState.chooseID && !nextState.loading){\n  //         let {loading} = this.state;\n  //         if(!loading){\n  //             this.setState({loading: true})\n  //         }\n  //         let {chooseID} = nextProps;\n  //         axios.get(`/api/producttype/${chooseID}/1`)\n  //         .then(res => {\n  //             axios.get(`/api/totalproduct/${chooseID}`)\n  //                 .then(res1 => {\n  //                     this.setState({\n  //                         totalproduct: res1.data.total_product,\n  //                         productslist : res.data,\n  //                         chooseID: chooseID,\n  //                         currentPage: 1,\n  //                         loading: false\n  //                     })\n  //                 })\n  //                 .catch(error => console.log(error));\n  //         })\n  //         .catch(error => console.log(error));\n  //     }else{\n  //         console.log('not will update')\n  //     }\n  // }\n\n\n  componentDidUpdate(props, state) {\n    console.log('content did update');\n    console.log(props);\n    console.log(state);\n\n    if (props.chooseID != state.chooseID) {\n      let {\n        chooseID\n      } = this.props;\n      axios.get(`/api/producttype/${chooseID}/1`).then(res => {\n        axios.get(`/api/totalproduct/${chooseID}`).then(res1 => {\n          this.setState({\n            totalproduct: res1.data.total_product,\n            productslist: res.data,\n            chooseID: chooseID\n          });\n        }).catch(error => console.log(error));\n      }).catch(error => console.log(error));\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else {\n      console.log('aaaaaaaaa  ');\n    }\n  }\n\n  render() {\n    console.log('content render');\n    let cards = this.state.productslist.map(e => {\n      if (e.TEN_SAN_PHAM[0] === '\\\"') {\n        e.TEN_SAN_PHAM = e.TEN_SAN_PHAM.substring(1, e.TEN_SAN_PHAM.length - 1);\n        e.THOI_DIEM_DANG = e.THOI_DIEM_DANG.substring(1, e.THOI_DIEM_DANG.length - 1);\n      }\n\n      return React.createElement(Card, {\n        key: e._id,\n        product: e,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    });\n    let {\n      totalproduct\n    } = this.state;\n    let temp = Math.floor(totalproduct / 6);\n    let pageCount = totalproduct % 6 !== 0 ? temp + 1 : temp;\n    return this.state.loading ? React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      size: 120,\n      spinnerColor: \"#333\",\n      spinnerWidth: 3,\n      visible: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, cards), React.createElement(\"div\", {\n      id: \"pagination-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      totalpage: pageCount,\n      changeCurrentPage: this.changeCurrentPage,\n      currentPage: this.state.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["E:/WorkPlace-React/MERNAPP/client/src/Home/Content.js"],"names":["React","axios","Card","Pagination","Spinner","Content","Component","constructor","props","changeCurrentPage","numPage","chooseID","state","get","then","res","setState","productslist","data","currentPage","catch","error","console","log","totalproduct","loading","componentDidMount","res1","total_product","componentDidUpdate","window","scrollTo","top","behavior","render","cards","map","e","TEN_SAN_PHAM","substring","length","THOI_DIEM_DANG","_id","temp","Math","floor","pageCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AACA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkEnBC,iBAlEmB,GAkECC,OAAO,IAAI;AAC3B,UAAI;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAtB,CAD2B,CAE3B;;AACAX,MAAAA,KAAK,CAACY,GAAN,CAAW,oBAAmBF,QAAS,IAAGD,OAAQ,EAAlD,EACKI,IADL,CACUC,GAAG,IAAI;AACT,aAAKC,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAGF,GAAG,CAACG,IADT;AAEVC,UAAAA,WAAW,EAAET;AAFH,SAAd;AAIH,OANL,EAOKU,KAPL,CAOWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAPpB;AAQH,KA7EkB;;AAEf,SAAKT,KAAL,GAAa;AACTK,MAAAA,YAAY,EAAG,EADN;AAETO,MAAAA,YAAY,EAAE,CAFL;AAGTL,MAAAA,WAAW,EAAE,CAHJ;AAITM,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAI;AAACZ,MAAAA;AAAD,QAAa,KAAKH,KAAtB;AACAP,IAAAA,KAAK,CAACY,GAAN,CAAW,oBAAmBF,QAAS,IAAvC,EACKG,IADL,CACUC,GAAG,IAAI;AACTd,MAAAA,KAAK,CAACY,GAAN,CAAW,qBAAoBF,QAAS,EAAxC,EACKG,IADL,CACUa,IAAI,IAAI;AACV,aAAKX,QAAL,CAAc;AACVQ,UAAAA,YAAY,EAAEG,IAAI,CAACT,IAAL,CAAUU,aADd;AAEVX,UAAAA,YAAY,EAAGF,GAAG,CAACG,IAFT;AAGVP,UAAAA,QAAQ,EAAEA;AAHA,SAAd;AAKH,OAPL,EAQKS,KARL,CAQWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARpB;AASH,KAXL,EAYKD,KAZL,CAYWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAZpB;AAaH,GA3BgC,CA6BjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAeAQ,EAAAA,kBAAkB,CAACrB,KAAD,EAAQI,KAAR,EAAc;AAC5BU,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;;AACA,QAAGJ,KAAK,CAACG,QAAN,IAAkBC,KAAK,CAACD,QAA3B,EAAoC;AAChC,UAAI;AAACA,QAAAA;AAAD,UAAa,KAAKH,KAAtB;AACAP,MAAAA,KAAK,CAACY,GAAN,CAAW,oBAAmBF,QAAS,IAAvC,EACKG,IADL,CACUC,GAAG,IAAI;AACTd,QAAAA,KAAK,CAACY,GAAN,CAAW,qBAAoBF,QAAS,EAAxC,EACKG,IADL,CACUa,IAAI,IAAI;AACV,eAAKX,QAAL,CAAc;AACVQ,YAAAA,YAAY,EAAEG,IAAI,CAACT,IAAL,CAAUU,aADd;AAEVX,YAAAA,YAAY,EAAGF,GAAG,CAACG,IAFT;AAGVP,YAAAA,QAAQ,EAAEA;AAHA,WAAd;AAKH,SAPL,EAQKS,KARL,CAQWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARpB;AASH,OAXL,EAYKD,KAZL,CAYWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAZpB;AAaAS,MAAAA,MAAM,CAACC,QAAP,CAAgB;AACZC,QAAAA,GAAG,EAAE,CADO;AAEZC,QAAAA,QAAQ,EAAC;AAFG,OAAhB;AAIH,KAnBD,MAmBK;AACDX,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AAEJ;;AAEDW,EAAAA,MAAM,GAAG;AACLZ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIY,KAAK,GAAG,KAAKvB,KAAL,CAAWK,YAAX,CAAwBmB,GAAxB,CAA4BC,CAAC,IAAI;AACzC,UAAGA,CAAC,CAACC,YAAF,CAAe,CAAf,MAAsB,IAAzB,EAA8B;AAC1BD,QAAAA,CAAC,CAACC,YAAF,GAAiBD,CAAC,CAACC,YAAF,CAAeC,SAAf,CAAyB,CAAzB,EAA2BF,CAAC,CAACC,YAAF,CAAeE,MAAf,GAAwB,CAAnD,CAAjB;AACAH,QAAAA,CAAC,CAACI,cAAF,GAAmBJ,CAAC,CAACI,cAAF,CAAiBF,SAAjB,CAA2B,CAA3B,EAA6BF,CAAC,CAACI,cAAF,CAAiBD,MAAjB,GAA0B,CAAvD,CAAnB;AACH;;AAED,aACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEH,CAAC,CAACK,GAAb;AAAkB,QAAA,OAAO,EAAEL,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KATW,CAAZ;AAWA,QAAI;AAACb,MAAAA;AAAD,QAAiB,KAAKZ,KAA1B;AACA,QAAI+B,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWrB,YAAY,GAAG,CAA1B,CAAX;AACA,QAAIsB,SAAS,GAAGtB,YAAY,GAAG,CAAf,KAAqB,CAArB,GAA0BmB,IAAI,GAAG,CAAjC,GAAsCA,IAAtD;AAEA,WACI,KAAK/B,KAAL,CAAWa,OAAX,GACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,GAAf;AAAoB,MAAA,YAAY,EAAE,MAAlC;AAA0C,MAAA,YAAY,EAAE,CAAxD;AAA2D,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWa,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,GAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKU,KADL,CADJ,EAKI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEW,SADf;AAEI,MAAA,iBAAiB,EAAE,KAAKrC,iBAF5B;AAGI,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWO,WAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CANJ;AAoBH;;AAlJgC;;AAqJrC,eAAed,OAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\nimport Pagination from '../Components/Pagination';\r\nimport Spinner from 'react-spinner-material';\r\nclass Content extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productslist : [],\r\n            totalproduct: 0,\r\n            currentPage: 1,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('content did mount')\r\n        let {chooseID} = this.props;\r\n        axios.get(`/api/producttype/${chooseID}/1`)\r\n            .then(res => {\r\n                axios.get(`/api/totalproduct/${chooseID}`)\r\n                    .then(res1 => {\r\n                        this.setState({\r\n                            totalproduct: res1.data.total_product,\r\n                            productslist : res.data,\r\n                            chooseID: chooseID\r\n                        })\r\n                    })\r\n                    .catch(error => console.log(error));\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n    \r\n    // shouldComponentUpdate(nextProps, nextState){\r\n    //     console.log(nextProps)\r\n    //     console.log(nextState)\r\n    //     console.log(this.state)\r\n    //     if(nextProps.chooseID != nextState.chooseID ){\r\n    //         return true;\r\n    //     }\r\n    //     return false;   \r\n    // }\r\n\r\n    // componentWillUpdate(nextProps, nextState){\r\n    //     console.log('content will update')\r\n    //     if(nextProps.chooseID != nextState.chooseID && !nextState.loading){\r\n    //         let {loading} = this.state;\r\n    //         if(!loading){\r\n    //             this.setState({loading: true})\r\n    //         }\r\n    //         let {chooseID} = nextProps;\r\n    //         axios.get(`/api/producttype/${chooseID}/1`)\r\n    //         .then(res => {\r\n    //             axios.get(`/api/totalproduct/${chooseID}`)\r\n    //                 .then(res1 => {\r\n    //                     this.setState({\r\n    //                         totalproduct: res1.data.total_product,\r\n    //                         productslist : res.data,\r\n    //                         chooseID: chooseID,\r\n    //                         currentPage: 1,\r\n    //                         loading: false\r\n    //                     })\r\n    //                 })\r\n    //                 .catch(error => console.log(error));\r\n    //         })\r\n    //         .catch(error => console.log(error));\r\n    //     }else{\r\n    //         console.log('not will update')\r\n    //     }\r\n    // }\r\n\r\n    changeCurrentPage = numPage => {\r\n        let {chooseID} = this.state;\r\n        // this.setState({loading: true})\r\n        axios.get(`/api/producttype/${chooseID}/${numPage}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    productslist : res.data,\r\n                    currentPage: numPage\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    componentDidUpdate(props, state){\r\n        console.log('content did update')\r\n        console.log(props);\r\n        console.log(state);\r\n        if(props.chooseID != state.chooseID){\r\n            let {chooseID} = this.props;\r\n            axios.get(`/api/producttype/${chooseID}/1`)\r\n                .then(res => {\r\n                    axios.get(`/api/totalproduct/${chooseID}`)\r\n                        .then(res1 => {\r\n                            this.setState({\r\n                                totalproduct: res1.data.total_product,\r\n                                productslist : res.data,\r\n                                chooseID: chooseID  \r\n                            })\r\n                        })\r\n                        .catch(error => console.log(error));\r\n                })\r\n                .catch(error => console.log(error));\r\n            window.scrollTo({\r\n                top: 0,\r\n                behavior:'smooth'\r\n            })\r\n        }else{\r\n            console.log('aaaaaaaaa  ')\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log('content render')\r\n        let cards = this.state.productslist.map(e => {\r\n            if(e.TEN_SAN_PHAM[0] === '\\\"'){\r\n                e.TEN_SAN_PHAM = e.TEN_SAN_PHAM.substring(1,e.TEN_SAN_PHAM.length - 1);\r\n                e.THOI_DIEM_DANG = e.THOI_DIEM_DANG.substring(1,e.THOI_DIEM_DANG.length - 1);\r\n            }\r\n\r\n            return(\r\n                <Card key={e._id} product={e}/>\r\n            )\r\n        })\r\n\r\n        let {totalproduct} = this.state;\r\n        let temp = Math.floor(totalproduct / 6);\r\n        let pageCount = totalproduct % 6 !== 0 ? (temp + 1) : temp;\r\n\r\n        return (\r\n            this.state.loading ? \r\n            <div className=\"loading\"> \r\n                <Spinner size={120} spinnerColor={\"#333\"} spinnerWidth={3} visible={this.state.loading} />\r\n            </div> \r\n            : \r\n            <div>\r\n                <div className={\"content-wrapper\" }>\r\n                    {cards}\r\n                </div>\r\n\r\n                <div id=\"pagination-wrapper\">\r\n                    <Pagination\r\n                        totalpage={pageCount}\r\n                        changeCurrentPage={this.changeCurrentPage}\r\n                        currentPage={this.state.currentPage}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}